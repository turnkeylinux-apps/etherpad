#!/bin/bash -ex

source /usr/local/src/tkl-bashlib/init.sh

DB_NAME=etherpad
DB_USER=etherpad
DB_PASS=$(mcookie)

NODEAPP=/opt/etherpad-lite
CONF=$NODEAPP/settings.json

# setup mysql for etherpad using tkl-bashlib
tkl_mysql_setup $DB_NAME $DB_USER $DB_PASS

# Etherpad "master" branch should be safe, but let's use the release
ep_version=$(gh_releases ether/etherpad-lite | grep -v beta\|rc | tail -1)
git clone --depth=1 --branch=$ep_version https://github.com/ether/etherpad-lite.git $NODEAPP

PLUGINS="ep_hash_auth ep_headings2 ep_markdown ep_comments_page ep_align \
         ep_font_color ep_webrtc ep_embedded_hyperlinks2"

n lts # use latest nodejs lts (min supported is v18.18.2 as of etherpad 1.9.6)
n prune # remove alternate node versions
chown -R node:node $NODEAPP

# default TurnKey Etherpad settings.json (config file) in overlay
mv /usr/local/src/tkl-etherpad.settings.example $CONF
sed -i "\|\"password\":|s|:.*|: \"$DB_PASS\",|" $CONF

mkdir -p /var/log/etherpad
touch /var/log/etherpad/etherpad.log
chown -R node:node /var/log/etherpad

echo -n $(mcookie) > $NODEAPP/APIKEY.txt
echo -n $(mcookie) > $NODEAPP/SESSIONKEY.txt
echo -n "done" > $NODEAPP/src/.ep_initialized

mkdir -p $NODEAPP/var
chown -R node:node $NODEAPP

# Use purpose built Etherpad Nginx conf from overlay, rather than default
# shared NodeJS conf
rm /etc/nginx/sites-available/nodejs
rm /etc/nginx/sites-enabled/tkl-default
ln -s /etc/nginx/sites-available/etherpad /etc/nginx/sites-enabled/etherpad
service nginx start

# manually start etherpad the first time
su - node -c \
    "cd $NODEAPP && NODE_ENV=production ./bin/run.sh >$NODEAPP/log.tmp 2>&1 &"

echo "Waiting for Etherpad to complete first run."
# use function from tkl-bashlib to wait until server has started successfully
wait_for_http_code

echo "Etherpad first run complete. Now killing."
kill -s SIGTERM $(pgrep node)

su - node -c "cd $NODEAPP && npm install --lockfile-version 1 --no-save --legacy-peer-deps $PLUGINS argon2"

rm $NODEAPP/log.tmp

service mysql stop
service nginx stop
